{"version":3,"sources":["demo.js","App.js","index.js"],"names":["demoText","toolbar","App","className","css","this","ckWrapperStyle","styles","clientId","editor","ClassicEditor","data","config","onInit","console","log","Array","from","ui","componentFactory","names","builtinPlugins","map","plugin","pluginName","onChange","event","getData","onBlur","onFocus","React","Component","rootElement","document","getElementById","createRoot","render"],"mappings":"iMAAaA,G,MACF,y9BAYEC,EAAU,CACrB,UACA,IACA,OACA,SACA,OACA,eACA,eACA,aACA,WACA,IACA,uBACA,cACA,kBACA,kBACA,IACA,aACA,cACA,cACA,WACA,kBACA,IACA,OACA,Q,yDC5BmBC,EAAG,kHAqErB,OArEqB,mCACtB,WACE,OACE,sBACEC,UAAU,mBACVC,IAAKA,YAAG,kDACJC,KAAKC,gBACP,UAEF,cAAC,IAAM,CACLC,OAAQH,YAAG,i/BA2Bb,eAAC,IAAqB,CAACI,SAAS,gCAA+B,UAC7D,2EACA,cAAC,IAAQ,CACPC,OAAQC,IACRC,KAAMX,EACNY,OAAQX,EACRY,OAAQ,SAACJ,GAEPK,QAAQC,IAAI,0BAA2BN,GACvCK,QAAQC,IACN,YACAC,MAAMC,KAAKR,EAAOS,GAAGC,iBAAiBC,UAExCN,QAAQC,IACN,YACAL,IAAcW,eAAeC,KAAI,SAACC,GAAM,OAAKA,EAAOC,UAAU,IAElE,EACAC,SAAU,SAACC,EAAOjB,GAChB,IAAME,EAAOF,EAAOkB,UACpBb,QAAQC,IAAI,CAAEW,QAAOjB,SAAQE,QAC/B,EACAiB,OAAQ,SAACnB,GACPK,QAAQC,IAAI,QAASN,EACvB,EACAoB,QAAS,SAACpB,GACRK,QAAQC,IAAI,SAAUN,EACxB,SAKV,KAAC,EArEqB,CAASqB,IAAMC,WCHjCC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.f3726498.chunk.js","sourcesContent":["export const demoText = {\r\n  textarea: `did valued\r\nMispellings and grammatical errors can effect your credibility. The same goes for misused commas, and other types of punctuation . Not only will Grammarly underline these issues in red, it will also showed you how to correctly write the sentence.\r\n  \r\nUnderlines that are blue indicate that Grammarly has spotted a sentence that is unnecessarily wordy. You'll find suggestions that can possibly help you revise a wordy sentence in an effortless manner.\r\n    \r\nBut wait...there's more?\r\n  \r\nGrammarly can give you very helpful feedback on your writing. Passive voice can be fixed by Grammarly, and it can handle classical word-choice mistakes.\r\n    \r\nIt can even help when you wanna refine ur slang or formality level. That's especially useful when writing for a broad audience ranging from businessmen to friends and family, don't you think? It'll inspect your vocabulary carefully and suggest the best word to make sure you don't have to analyze your writing too much.`\r\n};\r\n\r\nexport const toolbar = [\r\n  \"heading\",\r\n  \"|\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"link\",\r\n  \"bulletedList\",\r\n  \"numberedList\",\r\n  \"blockQuote\",\r\n  \"ckfinder\",\r\n  \"|\",\r\n  \"imageTextAlternative\",\r\n  \"imageUpload\",\r\n  \"imageStyle:full\",\r\n  \"imageStyle:side\",\r\n  \"|\",\r\n  \"mediaEmbed\",\r\n  \"insertTable\",\r\n  \"tableColumn\",\r\n  \"tableRow\",\r\n  \"mergeTableCells\",\r\n  \"|\",\r\n  \"undo\",\r\n  \"redo\"\r\n];\r\n","import \"./styles.css\";\nimport React from \"react\";\nimport { demoText, toolbar } from \"./demo\";\nimport { Global, css } from \"@emotion/core\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { GrammarlyEditorPlugin } from \"@grammarly/editor-sdk-react\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"ckeditor-wrapper\"\n        css={css`\n          ${this.ckWrapperStyle}\n        `}\n      >\n        <Global\n          styles={css`\n            :root {\n              --ck-border-radius: 4px;\n              --ck-color-focus-border: rgba(96, 103, 113, 0.8);\n              --ck-color-shadow-inner: rgba(69, 79, 99, 0.2);\n              --ck-inner-shadow: 0 0 0 2px var(--ck-color-shadow-inner);\n              --ck-spacing-large: var(--ck-spacing-standard);\n            }\n            .ck.ck-editor__editable_inline {\n              border: 1px solid rgba(217, 217, 217, 1);\n              transition: all 0.3s;\n              &:hover {\n                border-color: rgba(96, 102, 112, 1);\n                border-right-width: 1px !important;\n              }\n            }\n            .ck-editor__editable.ck-read-only {\n              background-color: rgba(245, 245, 245, 1);\n              opacity: 1;\n              cursor: not-allowed;\n              color: rgba(0, 0, 0, 0.25);\n              &:hover {\n                border-color: rgba(217, 217, 217, 1);\n              }\n            }\n          `}\n        />\n        <GrammarlyEditorPlugin clientId=\"client_NG84FFXQD2VB6Au1iTiXW8\">\n          <h1>Grammarly Demo by Kaushik Dey ( React Js)</h1>\n          <CKEditor\n            editor={ClassicEditor}\n            data={demoText.textarea}\n            config={toolbar}\n            onInit={(editor) => {\n              // You can store the \"editor\" and use when it is needed.\n              console.log(\"Editor is ready to use!\", editor);\n              console.log(\n                \"toolbar: \",\n                Array.from(editor.ui.componentFactory.names())\n              );\n              console.log(\n                \"plugins: \",\n                ClassicEditor.builtinPlugins.map((plugin) => plugin.pluginName)\n              );\n            }}\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              console.log({ event, editor, data });\n            }}\n            onBlur={(editor) => {\n              console.log(\"Blur.\", editor);\n            }}\n            onFocus={(editor) => {\n              console.log(\"Focus.\", editor);\n            }}\n          />\n        </GrammarlyEditorPlugin>\n      </div>\n    );\n  }\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}